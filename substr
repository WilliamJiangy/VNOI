// @Author: WilliamJiangy
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;

#define testcase() {ll t; cin >> t; while(t--) {solve();}}
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size())
#define pb push_back
#define ar array
#define bug() cout << "######PLEASE_NO_BUG######\n"

const int base = 31;
const ll M = 1000000003, nxM = 1000111;

ll Pow[nxM], hashP[nxM];

ll get_hash(int i, int j) {
	return (hashP[j] - hashP[i - 1] * Pow[j - i + 1] + M * M) % M;
}

void solve() {
	string T, P;
	cin >> P >> T;
	int t = sz(T);
	int p = sz(P);
	T = " " + T;
	P = " " + P;
	Pow[0] = 1;
	for(int i = 1; i <= p; i++) Pow[i] = (Pow[i - 1] * base) % M;
	for(int i = 1; i <= p; i++) hashP[i] = (hashP[i - 1] * base + P[i] - 'a' + 1) % M;
	ll hashT = 0;
	for(int i = 1; i <= t; i++) hashT = (hashT * base + T[i] - 'a' + 1) % M;
	for(int i = 1; i <= p - t + 1; i++) {
		if(hashT == get_hash(i, i + t - 1)) {
			cout << i << " ";
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
//	testcase();
	solve();
	return 0;
}
